#!/bin/bash

DRY_RUN=0

# Check for --dry-run option
if [[ "$1" == "--dry-run" ]]; then
    DRY_RUN=1
    shift
fi

# Check if the correct number of arguments are provided
if [[ $# -ne 2 ]]; then
    echo "Usage: $0 [--dry-run] <search_pattern> <replace_pattern>"
    exit 1
fi

search_pattern="$1"
replace_pattern="$2"

total_files=0
renamed_files=0

# Find and rename files, and sort the output
while read -r file; do
    total_files=$((total_files+1))
    dir=$(dirname "$file")
    base=$(basename "$file")
    new_base="${base/$search_pattern/$replace_pattern}"

    if [[ "$base" != "$new_base" ]]; then
        renamed_files=$((renamed_files+1))
        if [[ $DRY_RUN -eq 1 ]]; then
            echo -e "\033[1;33m🔍 [DRY-RUN] Would rename:\033[0m $file -> $dir/$new_base"
        else
            mv "$file" "$dir/$new_base"
            echo -e "\033[1;32m✅ Renamed:\033[0m $file -> $dir/$new_base"
        fi
    fi
done < <(find . -type f -name "*$search_pattern*" | sort)

if [[ $total_files -eq 0 ]]; then
    echo -e "\033[1;34mℹ️  No files matching the pattern were found.\033[0m"
else
    echo -e "\033[1;34mℹ️  Found $total_files files matching the pattern.\033[0m"
    if [[ $DRY_RUN -eq 1 ]]; then
        echo -e "\033[1;34m🔍 Dry run completed. No files were actually renamed.\033[0m"
    else
        echo "Renaming completed! $renamed_files files were renamed."
    fi
fi
